function minimumMoves(grid, startY, startX, goalY, goalX) {
  const start = {
    coord: [startY, startX],
    from: [],
  };
  const paths = bfs(grid, goalY, goalX, [start]);
  const shortestPath = findShortestPath(paths, goalY, goalX, startY, startX);
  console.log(shortestPath.join(" --> "));
  return shortestPath.length - 1;
}

function findShortestPath(paths, goalY, goalX, startY, startX) {
  let node = [goalY, goalX];
  const shortestPath = [];
  while (true) {
    shortestPath.unshift(node);
    if (node[0] === startY && node[1] === startX) return shortestPath;
    node = paths[node];
  }
}

function bfs(grid, goalY, goalX, toVisit) {
  const paths = {};
  while (toVisit.length) {
    const [y, x] = toVisit.shift().coord;
    if (y == goalY && x == goalX) return paths;
    const neighbours = findNeighbours(grid, paths, y, x);
    toVisit.push(...neighbours);
  }

  return paths;
}

function findNeighbours(grid, paths, y, x) {
  const neighbours = [];
  const from = [y, x];
  for (let i = y - 1; i >= 0; i--) {
    if (!isOpen(grid[i][x])) break;
    if (!paths[[i, x]]) {
      neighbours.push({ coord: [i, x], from });
      paths[[i, x]] = from;
    }
  }
  for (let i = y + 1; i < grid.length; i++) {
    if (!isOpen(grid[i][x])) break;
    if (!paths[[i, x]]) {
      neighbours.push({ coord: [i, x], from });
      paths[[i, x]] = from;
    }
  }
  for (let i = x - 1; i >= 0; i--) {
    if (!isOpen(grid[y][i])) break;
    if (!paths[[y, i]]) {
      neighbours.push({ coord: [y, i], from });
      paths[[y, i]] = from;
    }
  }
  for (let i = x + 1; i < grid.length; i++) {
    if (!isOpen(grid[y][i])) break;
    if (!paths[[y, i]]) {
      neighbours.push({ coord: [y, i], from });
      paths[[y, i]] = from;
    }
  }
  return neighbours;
}

function isOpen(s) {
  return s == ".";
}

// const grid = [
//   [".", "X", ".", ".", "X", "X", ".", ".", ".", "X"],
//   ["X", ".", ".", ".", ".", ".", ".", ".", ".", "."],
//   [".", "X", ".", ".", ".", ".", ".", ".", ".", "X"],
//   [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
//   [".", ".", ".", ".", ".", ".", ".", ".", "X", "."],
//   [".", "X", ".", ".", ".", "X", "X", "X", ".", "."],
//   [".", ".", ".", ".", ".", "X", ".", ".", "X", "X"],
//   [".", ".", ".", ".", ".", "X", ".", "X", ".", "."],
//   [".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
//   [".", ".", ".", ".", ".", "X", ".", ".", "X", "X"],
// ];

// console.log(minimumMoves(grid, 9, 1, 9, 6));

const grid = [
  [
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
  ],
  [
    ".",
    "X",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
  ],
  [
    "X",
    "X",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    "X",
    ".",
    ".",
    "X",
    "X",
  ],
  [
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    "X",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    "X",
  ],
  [
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
  ],
  [
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
  ],
  [
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    ".",
    "X",
    ".",
    "X",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
  ],
  [
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    "X",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
  ],
  [
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
  ],
  [
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
  ],
  [
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
  ],
  [
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    "X",
    "X",
  ],
  [
    "X",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    "X",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    "X",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    "X",
    ".",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    "X",
    ".",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "X",
    "X",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
];
console.log(minimumMoves(grid, 34, 28, 16, 8));
